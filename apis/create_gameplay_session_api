from fastapi import FastAPI, HTTPException
from pydantic import BaseModel

app = FastAPI()

class GameplaySession(BaseModel):
    id: int
    player_id: int
    game_title: str
    duration: int
    score: int

# In-memory storage for demonstration purposes
sessions = {}

@app.post('/sessions/', response_model=GameplaySession)
def create_session(session: GameplaySession):
    if session.id in sessions:
        raise HTTPException(status_code=400, detail='Session already exists')
    sessions[session.id] = session
    return session

@app.get('/sessions/{session_id}', response_model=GameplaySession)
def get_session(session_id: int):
    session = sessions.get(session_id)
    if session is None:
        raise HTTPException(status_code=404, detail='Session not found')
    return session

@app.put('/sessions/{session_id}', response_model=GameplaySession)
def update_session(session_id: int, updated_session: GameplaySession):
    if session_id not in sessions:
        raise HTTPException(status_code=404, detail='Session not found')
    sessions[session_id] = updated_session
    return updated_session

@app.delete('/sessions/{session_id}')
def delete_session(session_id: int):
    if session_id not in sessions:
        raise HTTPException(status_code=404, detail='Session not found')
    del sessions[session_id]
    return {'detail': 'Successfully deleted'}
# recording_service/models.py
from django.db import models

class GameplaySession(models.Model):
    session_id = models.AutoField(primary_key=True)
    game_title = models.CharField(max_length=255)
    recording_data = models.TextField()
    performance_metrics = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.game_title} - {self.session_id}"

# recording_service/serializers.py
from rest_framework import serializers
from .models import GameplaySession

class GameplaySessionSerializer(serializers.ModelSerializer):
    class Meta:
        model = GameplaySession
        fields = '__all__'

# recording_service/views.py
from rest_framework import viewsets
from .models import GameplaySession
from .serializers import GameplaySessionSerializer

class GameplaySessionViewSet(viewsets.ModelViewSet):
    queryset = GameplaySession.objects.all()
    serializer_class = GameplaySessionSerializer

# recording_service/urls.py
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import GameplaySessionViewSet

router = DefaultRouter()
router.register(r'gameplay_sessions', GameplaySessionViewSet)

urlpatterns = [
    path('', include(router.urls)),
]

# recording_service/tests.py
from django.test import TestCase
from .models import GameplaySession

class GameplaySessionModelTest(TestCase):
    def setUp(self):
        GameplaySession.objects.create(game_title="Test Game", recording_data="data", performance_metrics={})

    def test_gameplay_session_creation(self):
        session = GameplaySession.objects.get(game_title="Test Game")
        self.assertEqual(session.recording_data, "data")
        self.assertEqual(session.performance_metrics, {})

# recording_service/admin.py
from django.contrib import admin
from .models import GameplaySession

@admin.register(GameplaySession)
class GameplaySessionAdmin(admin.ModelAdmin):
    list_display = ('session_id', 'game_title', 'created_at')

# recording_service/settings.py
INSTALLED_APPS = [
    ...,
    'rest_framework',
    'recording_service',
]

# recording_service/migrations/0001_initial.py
# This file is auto-generated by Django when you run `makemigrations` command.
# It contains the initial migration for the GameplaySession model.
